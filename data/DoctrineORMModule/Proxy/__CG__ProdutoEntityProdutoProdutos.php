<?php

namespace DoctrineORMModule\Proxy\__CG__\Produto\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ProdutoProdutos extends \Produto\Entity\ProdutoProdutos implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getSlugProduto()
    {
        $this->__load();
        return parent::getSlugProduto();
    }

    public function getIdproduto()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idproduto"];
        }
        $this->__load();
        return parent::getIdproduto();
    }

    public function getTitulo()
    {
        $this->__load();
        return parent::getTitulo();
    }

    public function getValor($formatado = false)
    {
        $this->__load();
        return parent::getValor($formatado);
    }

    public function getProdutosubcategoria()
    {
        $this->__load();
        return parent::getProdutosubcategoria();
    }

    public function setIdproduto($idproduto)
    {
        $this->__load();
        return parent::setIdproduto($idproduto);
    }

    public function setTitulo($titulo)
    {
        $this->__load();
        return parent::setTitulo($titulo);
    }

    public function setValor($valor, $formatar = true)
    {
        $this->__load();
        return parent::setValor($valor, $formatar);
    }

    public function setProdutosubcategoria($produtosubcategoria)
    {
        $this->__load();
        return parent::setProdutosubcategoria($produtosubcategoria);
    }

    public function getDestaque()
    {
        $this->__load();
        return parent::getDestaque();
    }

    public function setDestaque($destaque)
    {
        $this->__load();
        return parent::setDestaque($destaque);
    }

    public function getAtivo()
    {
        $this->__load();
        return parent::getAtivo();
    }

    public function setAtivo($ativo)
    {
        $this->__load();
        return parent::setAtivo($ativo);
    }

    public function getPeso()
    {
        $this->__load();
        return parent::getPeso();
    }

    public function getComprimento()
    {
        $this->__load();
        return parent::getComprimento();
    }

    public function getAltura()
    {
        $this->__load();
        return parent::getAltura();
    }

    public function getLargura()
    {
        $this->__load();
        return parent::getLargura();
    }

    public function setPeso($peso)
    {
        $this->__load();
        return parent::setPeso($peso);
    }

    public function setComprimento($comprimento)
    {
        $this->__load();
        return parent::setComprimento($comprimento);
    }

    public function setAltura($altura)
    {
        $this->__load();
        return parent::setAltura($altura);
    }

    public function setLargura($largura)
    {
        $this->__load();
        return parent::setLargura($largura);
    }

    public function getAcessos()
    {
        $this->__load();
        return parent::getAcessos();
    }

    public function setAcessos($acessos)
    {
        $this->__load();
        return parent::setAcessos($acessos);
    }

    public function getFoto()
    {
        $this->__load();
        return parent::getFoto();
    }

    public function setFoto($foto)
    {
        $this->__load();
        return parent::setFoto($foto);
    }

    public function getEstoque()
    {
        $this->__load();
        return parent::getEstoque();
    }

    public function setEstoque($estoque)
    {
        $this->__load();
        return parent::setEstoque($estoque);
    }

    public function getImagens()
    {
        $this->__load();
        return parent::getImagens();
    }

    public function setImagens($imagens)
    {
        $this->__load();
        return parent::setImagens($imagens);
    }

    public function getDescricao()
    {
        $this->__load();
        return parent::getDescricao();
    }

    public function setDescricao($descricao)
    {
        $this->__load();
        return parent::setDescricao($descricao);
    }

    public function getCodigoProduto()
    {
        $this->__load();
        return parent::getCodigoProduto();
    }

    public function setCodigoProduto($codigoProduto)
    {
        $this->__load();
        return parent::setCodigoProduto($codigoProduto);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idproduto', 'codigoProduto', 'titulo', 'descricao', 'slugProduto', 'valor', 'peso', 'comprimento', 'altura', 'largura', 'destaque', 'acessos', 'foto', 'ativo', 'produtosubcategoria', 'estoque', 'imagens');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}